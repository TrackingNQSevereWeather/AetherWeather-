import React from "react";
import { motion } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
import { Sun, Cloud, CloudRain, Snowflake, Zap as Thunderstorm } from "lucide-react";
import { format } from "date-fns";
import { useTheme } from "../theme/ThemeProvider";

const weatherIcons = {
  sunny: Sun,
  cloudy: Cloud,
  rainy: CloudRain,
  snowy: Snowflake,
  thunderstorm: Thunderstorm,
  clear: Sun,
};

export default function ForecastCard({ forecast, index }) {
  const { theme, temperatureUnit } = useTheme();

  const convertTemp = (celsius) => {
    if (temperatureUnit === 'fahrenheit') {
      return Math.round((celsius * 9) / 5 + 32);
    }
    return Math.round(celsius);
  };

  let IconComponent;
  if (forecast.weather_icon && forecast.weather_icon.startsWith('//')) {
      IconComponent = <img src={`https:${forecast.weather_icon}`} alt={forecast.condition} className="w-8 h-8 group-hover:scale-110 transition-transform duration-300" />;
  } else {
      const LucideIcon = weatherIcons[forecast.condition?.toLowerCase()] || Cloud;
      IconComponent = <LucideIcon className="w-8 h-8 text-white group-hover:scale-110 transition-transform duration-300" />;
  }
  
  return (
    <motion.div
      initial={{ opacity: 0, x: 20 }}
      animate={{ opacity: 1, x: 0 }}
      transition={{ duration: 0.5, delay: index * 0.1 }}
    >
      <Card className={`${theme === 'dark' ? 'glass-effect-dark' : 'glass-effect-light'} border-white/20 hover:bg-white/40 dark:hover:bg-black/30 transition-all duration-300 group h-full`}>
        <CardContent className="p-6">
          <div className="text-center space-y-4">
            <div className="text-sm font-medium text-white/80">
              {format(new Date(forecast.date), 'EEE')}
            </div>
            <div className="flex justify-center h-8">
              {IconComponent}
            </div>
            <div className="space-y-1">
              <div className="text-lg font-bold text-white">{convertTemp(forecast.high)}°</div>
              <div className="text-sm text-gray-400">{convertTemp(forecast.low)}°</div>
            </div>
            <div className="text-xs text-gray-400 capitalize">
              {forecast.condition}
            </div>
            {forecast.precipitation > 0 && (
              <div className="text-xs text-blue-400">
                {forecast.precipitation}% rain
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}

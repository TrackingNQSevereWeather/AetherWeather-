
import React, { useMemo } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';
import { Droplets, Thermometer } from 'lucide-react';
import { useTheme } from '../theme/ThemeProvider';

export default function HumidityGraph({ hourlyData }) {
  const { theme, temperatureUnit } = useTheme();

  const chartData = useMemo(() => {
    if (!hourlyData || hourlyData.length === 0) return [];

    const convertTemp = (celsius) => {
      if (temperatureUnit === 'fahrenheit') {
        return Math.round(celsius * 9 / 5 + 32);
      }
      return celsius;
    };

    return hourlyData.slice(0, 24).map((hour) => ({
      time: new Date(`2024-01-01T${hour.time}`).toLocaleTimeString([], { hour: 'numeric', hour12: true }),
      humidity: hour.humidity,
      dewPoint: convertTemp(hour.dew_point),
      temperature: convertTemp(hour.temp)
    }));
  }, [hourlyData, temperatureUnit]);

  if (!chartData || chartData.length === 0) {
    return null;
  }

  const tempUnitLabel = temperatureUnit === 'celsius' ? '°C' : '°F';

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: 0.6 }}>

      <Card className={`${theme === 'dark' ? 'glass-effect-dark' : 'glass-effect-light'} border-white/20`}>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2 text-gray-900 dark:text-white">
            <Droplets className="w-5 h-5 text-blue-600" />
            <span className="text-slate-50">Humidity & Dew Point Trends</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={chartData}>
                <CartesianGrid strokeDasharray="3 3" stroke={theme === 'dark' ? '#374151' : '#e5e7eb'} />
                <XAxis
                  dataKey="time"
                  stroke={theme === 'dark' ? '#9ca3af' : '#6b7280'}
                  fontSize={12} />

                <YAxis
                  stroke={theme === 'dark' ? '#9ca3af' : '#6b7280'}
                  fontSize={12} />

                <Tooltip
                  contentStyle={{
                    backgroundColor: theme === 'dark' ? '#1f2937' : '#ffffff',
                    border: '1px solid ' + (theme === 'dark' ? '#374151' : '#e5e7eb'),
                    borderRadius: '8px',
                    color: theme === 'dark' ? '#ffffff' : '#000000'
                  }}
                  formatter={(value, name) => {
                    if (name.includes('Point') || name.includes('Temp')) {
                      return [`${value}${tempUnitLabel}`, name];
                    }
                    if (name.includes('Humidity')) {
                      return [`${value}%`, name];
                    }
                    return [value, name];
                  }} />

                <Legend />
                <Line
                  type="monotone"
                  dataKey="humidity"
                  stroke="#3b82f6"
                  strokeWidth={2}
                  dot={{ fill: '#3b82f6', strokeWidth: 2, r: 3 }}
                  name="Humidity (%)" />

                <Line
                  type="monotone"
                  dataKey="dewPoint"
                  stroke="#10b981"
                  strokeWidth={2}
                  dot={{ fill: '#10b981', strokeWidth: 2, r: 3 }}
                  name={`Dew Point (${tempUnitLabel})`} />

                <Line
                  type="monotone"
                  dataKey="temperature"
                  stroke="#f59e0b"
                  strokeWidth={2}
                  dot={{ fill: '#f59e0b', strokeWidth: 2, r: 3 }}
                  name={`Temperature (${tempUnitLabel})`} />

              </LineChart>
            </ResponsiveContainer>
          </div>
        </CardContent>

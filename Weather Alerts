import React from "react";
import { motion } from "framer-motion";
import { AlertTriangle, Info, Shield, Zap, Waves, Wind, Flame, Sun, Snowflake, Tornado, Clock, MapPin } from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { format } from "date-fns";
import { useTheme } from "../theme/ThemeProvider";

const severityStyles = {
  extreme: "border-red-600 bg-red-50 dark:bg-red-900/20 text-red-900 dark:text-red-200",
  major: "border-orange-500 bg-orange-50 dark:bg-orange-900/20 text-orange-900 dark:text-orange-200",
  moderate: "border-yellow-500 bg-yellow-50 dark:bg-yellow-900/20 text-yellow-900 dark:text-yellow-200",
  minor: "border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-900 dark:text-blue-200",
};

const alertTypeIcons = {
  thunderstorm: Zap,
  flood: Waves,
  cyclone: Wind,
  fire: Flame,
  wind: Wind,
  heat: Sun,
  cold: Snowflake,
  snow: Snowflake,
  tornado: Tornado,
  default: AlertTriangle
};

const sourceColors = {
  BOM: "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200",
  NWS: "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200",
  LOCAL: "bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200"
};

export default function WeatherAlerts({ warnings }) {
  const { theme } = useTheme();

  if (!warnings || warnings.length === 0) {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
        className="mb-6"
      >
        <Card className={`${theme === 'dark' ? 'glass-effect-dark' : 'glass-effect-light'} border-green-200 dark:border-green-800`}>
          <CardContent className="p-4 flex items-center space-x-3">
            <Shield className="w-6 h-6 text-green-600 dark:text-green-400" />
            <div>
              <h3 className="font-semibold text-white">No Active Warnings</h3>
              <p className="text-sm text-gray-400">All clear for your location</p>
            </div>
          </CardContent>
        </Card>
      </motion.div>
    );
  }

  // Sort warnings by severity
  const sortedWarnings = [...warnings].sort((a, b) => {
    const severityOrder = { extreme: 4, major: 3, moderate: 2, minor: 1 };
    return (severityOrder[b.severity] || 0) - (severityOrder[a.severity] || 0);
  });

  return (
    <motion.div
 
